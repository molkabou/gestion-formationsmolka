# Nombre de répliques pour votre application
replicaCount: 2

# Configuration de l'image Docker
image:
  repository: molkabouzaida/gestion-formation  # Remplacez par le nom de votre image Docker
  tag: "latest"  # Version de l'image
  pullPolicy: IfNotPresent

# Configuration du service Kubernetes
service:
  type: ClusterIP
  port: 5000  # Port exposé par l'application

# Configuration de l'autoscaling (HorizontalPodAutoscaler)
autoscaling:
  enabled: false  # Active ou désactive l'autoscaling
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 75

# Variables d'environnement de votre application
env:
  - name: DB_HOST
    value: mysql  # Nom du service MySQL dans Kubernetes
  - name: DB_USER
    value: root
  - name: DB_PASSWORD
    value: root

# Configuration du stockage persistant pour MySQL
persistence:
  enabled: true
  accessMode: ReadWriteOnce
  size: 10Gi

# Configuration de l'ingress (facultatif)
ingress:
  enabled: false
  annotations: {}
  hosts:
    - host: gestion-formation.local  # Remplacez par votre domaine ou URL
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

# Ressources et limites pour les conteneurs
resources:
  requests:
    memory: "256Mi"
    cpu: "250m"
  limits:
    memory: "512Mi"
    cpu: "500m"

# Configuration des règles RBAC et du compte de service
serviceAccount:
  create: true  # Crée un nouveau compte de service
  name: ""  # Nom personnalisé (laisser vide pour un nom généré automatiquement)

# Configuration des tests post-déploiement
test:
  enabled: true
  image:
    repository: busybox
    tag: latest
    pullPolicy: IfNotPresent
  command: ["/bin/sh", "-c"]
  args: ["curl -f http://gestion-formation-service:5000 || exit 1"]

# Configuration pour des métriques (Prometheus/Grafana)
metrics:
  enabled: true
  serviceMonitor:
    enabled: true
    additionalLabels: {}
    namespace: monitoring
    interval: 10s
